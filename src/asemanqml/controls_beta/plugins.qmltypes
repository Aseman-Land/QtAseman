import QtQuick.tooling 1.2

// This file describes the plugin-supplied types contained in the library.
// It is used for QML tooling purposes only.
//
// This file was auto-generated by:
// 'qmlplugindump -nonrelocatable AsemanQml.Controls.Beta 3.0'

Module {
    dependencies: ["QtQuick 2.0"]
    Component {
        name: "AsemanQuickAbstractStyle"
        defaultProperty: "data"
        prototype: "QQuickItem"
        exports: ["AsemanQml.Controls.Beta/AbstractStyle 3.0"]
        exportMetaObjectRevisions: [0]
        Property { name: "padding"; type: "AsemanQuickBoxSize"; isPointer: true }
        Property { name: "font"; type: "QFont" }
        Property { name: "extra"; type: "QVariantMap" }
    }
    Component {
        name: "AsemanQuickBoxSize"
        prototype: "QObject"
        exports: ["AsemanQml.Controls.Beta/BoxSize 3.0"]
        isCreatable: false
        exportMetaObjectRevisions: [0]
        Property { name: "left"; type: "int" }
        Property { name: "top"; type: "int" }
        Property { name: "right"; type: "int" }
        Property { name: "bottom"; type: "int" }
    }
    Component {
        name: "AsemanQuickControlItem"
        defaultProperty: "data"
        prototype: "AsemanQuickStyledItem"
        exports: ["AsemanQml.Controls.Beta/Control 3.0"]
        exportMetaObjectRevisions: [0]
        Property { name: "nextTabOrder"; type: "AsemanQuickControlItem"; isPointer: true }
        Property { name: "focusedInUsingKeyboard"; type: "bool"; isReadonly: true }
        Property { name: "focusableUsingKeyboard"; type: "bool" }
        Method { name: "focusNextItem" }
        Method { name: "focusPreviousItem" }
    }
    Component {
        name: "AsemanQuickMainPalette"
        prototype: "QObject"
        exports: ["AsemanQml.Controls.Beta/MainPalette 3.0"]
        isCreatable: false
        isSingleton: true
        exportMetaObjectRevisions: [0]
        Enum {
            name: "Theme"
            values: {
                "Auto": 0,
                "Light": 1,
                "Dark": 2
            }
        }
        Property { name: "theme"; type: "int" }
        Property { name: "highlight"; type: "QColor" }
        Property { name: "highlightText"; type: "QColor" }
        Property { name: "foreground"; type: "QColor" }
        Property { name: "background"; type: "QColor" }
        Property { name: "base"; type: "QColor" }
        Property { name: "baseText"; type: "QColor" }
    }
    Component {
        name: "AsemanQuickRadioButtonControl"
        defaultProperty: "data"
        prototype: "AsemanQuickControlItem"
        exports: ["AsemanQml.Controls.Beta/RadioControl 3.0"]
        exportMetaObjectRevisions: [0]
        Property { name: "checked"; type: "bool" }
    }
    Component {
        name: "AsemanQuickRadioButtonGroup"
        defaultProperty: "items"
        prototype: "QObject"
        exports: ["AsemanQml.Controls.Beta/RadioButtonGroup 3.0"]
        exportMetaObjectRevisions: [0]
        Property { name: "items"; type: "AsemanQuickRadioButtonControl"; isList: true; isReadonly: true }
        Method {
            name: "addButton"
            Parameter { name: "radio"; type: "AsemanQuickRadioButtonControl"; isPointer: true }
        }
        Method {
            name: "removeButton"
            Parameter { name: "radio"; type: "AsemanQuickRadioButtonControl"; isPointer: true }
        }
    }
    Component {
        name: "AsemanQuickRadioButtonGroupAttachedCreator"
        prototype: "QObject"
        exports: ["AsemanQml.Controls.Beta/ButtonGroup 3.0"]
        isCreatable: false
        exportMetaObjectRevisions: [0]
        attachedType: "AsemanQuickRadioButtonGroupAttachedProperty"
    }
    Component {
        name: "AsemanQuickRadioButtonGroupAttachedProperty"
        prototype: "QObject"
        Property { name: "group"; type: "AsemanQuickRadioButtonGroup"; isPointer: true }
    }
    Component {
        name: "AsemanQuickSceneItem"
        defaultProperty: "data"
        prototype: "AsemanQuickStyledItem"
        exports: ["AsemanQml.Controls.Beta/Scene 3.0"]
        exportMetaObjectRevisions: [0]
        Property { name: "font"; type: "QFont" }
    }
    Component {
        name: "AsemanQuickScrollViewCore"
        defaultProperty: "flickArea"
        prototype: "AsemanQuickControlItem"
        exports: ["AsemanQml.Controls.Beta/ScrollViewCore 3.0"]
        exportMetaObjectRevisions: [0]
        Property { name: "flickArea"; type: "QQuickItem"; isPointer: true }
    }
    Component {
        name: "AsemanQuickStyleAttachedProperty"
        prototype: "QObject"
        Property { name: "generalFontFamilies"; type: "QStringList" }
        Property { name: "accentColor"; type: "QColor" }
        Property { name: "accentTextColor"; type: "QColor" }
        Property { name: "foregroundColor"; type: "QColor" }
        Property { name: "backgroundColor"; type: "QColor" }
        Property { name: "primaryColor"; type: "QColor" }
        Property { name: "primaryTextColor"; type: "QColor" }
        Property { name: "baseColor"; type: "QColor" }
        Property { name: "baseTextColor"; type: "QColor" }
        Property { name: "styleName"; type: "string" }
        Property { name: "stylesSearchPath"; type: "QStringList" }
        Property { name: "styleUrl"; type: "QUrl"; isReadonly: true }
    }
    Component {
        name: "AsemanQuickStyleProperty"
        prototype: "QObject"
        exports: ["AsemanQml.Controls.Beta/Style 3.0"]
        isCreatable: false
        exportMetaObjectRevisions: [0]
        attachedType: "AsemanQuickStyleAttachedProperty"
    }
    Component {
        name: "AsemanQuickStyledItem"
        defaultProperty: "data"
        prototype: "QQuickItem"
        exports: ["AsemanQml.Controls.Beta/StyledItem 3.0"]
        exportMetaObjectRevisions: [0]
        Property { name: "sourceItem"; type: "QQuickItem"; isPointer: true }
        Property { name: "styleComponent"; type: "QQmlComponent"; isPointer: true }
        Property { name: "styleFileName"; type: "string" }
        Property {
            name: "styleItem"
            type: "AsemanQuickAbstractStyle"
            isReadonly: true
            isPointer: true
        }
    }
    Component {
        prototype: "QQuickItem"
        name: "AsemanQml.Controls.Beta/BottomDrawer 3.0"
        exports: ["AsemanQml.Controls.Beta/BottomDrawer 3.0"]
        exportMetaObjectRevisions: [0]
        isComposite: true
        defaultProperty: "delegate"
        Property { name: "styleFileName"; type: "string" }
        Property { name: "delegate"; type: "QQmlComponent"; isPointer: true }
        Property { name: "sceneComponent"; type: "QQmlComponent"; isPointer: true }
        Property { name: "item"; type: "QQuickItem"; isReadonly: true; isPointer: true }
        Property { name: "opened"; type: "bool" }
        Property { name: "gestureWidth"; type: "double" }
        Property { name: "maximumWidth"; type: "double" }
        Property { name: "touchToClose"; type: "bool" }
        Property { name: "blockBack"; type: "bool" }
        Property { name: "openToPrimaryViewport"; type: "bool" }
        Method { name: "open"; type: "QVariant" }
        Method { name: "close"; type: "QVariant" }
    }
    Component {
        prototype: "AsemanQuickControlItem"
        name: "AsemanQml.Controls.Beta/BusyIndicator 3.0"
        exports: ["AsemanQml.Controls.Beta/BusyIndicator 3.0"]
        exportMetaObjectRevisions: [0]
        isComposite: true
        defaultProperty: "data"
        Property { name: "running"; type: "bool" }
    }
    Component {
        prototype: "AsemanQuickControlItem"
        name: "AsemanQml.Controls.Beta/Button 3.0"
        exports: ["AsemanQml.Controls.Beta/Button 3.0"]
        exportMetaObjectRevisions: [0]
        isComposite: true
        defaultProperty: "data"
        Property { name: "text"; type: "string" }
        Property { name: "icon"; type: "string" }
        Property { name: "iconPixelSize"; type: "double" }
        Property { name: "highlighted"; type: "bool" }
        Property { name: "flat"; type: "bool" }
        Property { name: "radius"; type: "double" }
        Property { name: "pressedX"; type: "double"; isReadonly: true }
        Property { name: "pressedY"; type: "double"; isReadonly: true }
        Property { name: "pressed"; type: "bool"; isReadonly: true }
        Property { name: "hovered"; type: "bool"; isReadonly: true }
        Signal { name: "clicked" }
    }
    Component {
        prototype: "AsemanQuickControlItem"
        name: "AsemanQml.Controls.Beta/CheckBox 3.0"
        exports: ["AsemanQml.Controls.Beta/CheckBox 3.0"]
        exportMetaObjectRevisions: [0]
        isComposite: true
        defaultProperty: "data"
        Property { name: "text"; type: "string" }
        Property { name: "checked"; type: "bool" }
        Property { name: "pressedX"; type: "double"; isReadonly: true }
        Property { name: "pressedY"; type: "double"; isReadonly: true }
        Property { name: "pressed"; type: "bool"; isReadonly: true }
        Property { name: "hovered"; type: "bool"; isReadonly: true }
        Signal { name: "clicked" }
        Signal { name: "toggled" }
        Method { name: "toggle"; type: "QVariant" }
    }
    Component {
        prototype: "AsemanQuickControlItem"
        name: "AsemanQml.Controls.Beta/CheckBoxDelegate 3.0"
        exports: ["AsemanQml.Controls.Beta/CheckBoxDelegate 3.0"]
        exportMetaObjectRevisions: [0]
        isComposite: true
        defaultProperty: "data"
        Property { name: "text"; type: "string" }
        Property { name: "checked"; type: "bool" }
        Property { name: "pressedX"; type: "double"; isReadonly: true }
        Property { name: "pressedY"; type: "double"; isReadonly: true }
        Property { name: "pressed"; type: "bool"; isReadonly: true }
        Property { name: "hovered"; type: "bool"; isReadonly: true }
        Signal { name: "clicked" }
        Signal { name: "toggled" }
        Method { name: "toggle"; type: "QVariant" }
    }
    Component {
        prototype: "QQuickColumn"
        name: "AsemanQml.Controls.Beta/ColumnLayout 3.0"
        exports: ["AsemanQml.Controls.Beta/ColumnLayout 3.0"]
        exportMetaObjectRevisions: [0]
        isComposite: true
        defaultProperty: "data"
    }
    Component {
        prototype: "AsemanQuickControlItem"
        name: "AsemanQml.Controls.Beta/ComboBox 3.0"
        exports: ["AsemanQml.Controls.Beta/ComboBox 3.0"]
        exportMetaObjectRevisions: [0]
        isComposite: true
        defaultProperty: "data"
        Property { name: "delegateStyleFileName"; type: "string" }
        Property { name: "textRole"; type: "string" }
        Property { name: "displayText"; type: "string" }
        Property { name: "currentText"; type: "string"; isReadonly: true }
        Property { name: "currentIndex"; type: "int"; isReadonly: true }
        Property { name: "count"; type: "int" }
        Property { name: "flat"; type: "bool" }
        Property { name: "model"; type: "QVariant" }
        Property { name: "radius"; type: "double" }
        Property { name: "popup"; type: "MenuPopup_QMLTYPE_14"; isReadonly: true; isPointer: true }
        Property { name: "pressedX"; type: "double"; isReadonly: true }
        Property { name: "pressedY"; type: "double"; isReadonly: true }
        Property { name: "pressed"; type: "bool"; isReadonly: true }
        Property { name: "hovered"; type: "bool"; isReadonly: true }
    }
    Component {
        prototype: "AsemanQuickControlItem"
        name: "AsemanQml.Controls.Beta/ComboBoxDelegate 3.0"
        exports: ["AsemanQml.Controls.Beta/ComboBoxDelegate 3.0"]
        exportMetaObjectRevisions: [0]
        isComposite: true
        defaultProperty: "data"
        Property { name: "text"; type: "string" }
        Property { name: "selected"; type: "bool" }
        Property { name: "radius"; type: "double" }
        Property { name: "pressedX"; type: "double"; isReadonly: true }
        Property { name: "pressedY"; type: "double"; isReadonly: true }
        Property { name: "pressed"; type: "bool"; isReadonly: true }
        Property { name: "hovered"; type: "bool"; isReadonly: true }
        Signal { name: "clicked" }
    }
    Component {
        prototype: "QQuickItem"
        name: "AsemanQml.Controls.Beta/Dialog 3.0"
        exports: ["AsemanQml.Controls.Beta/Dialog 3.0"]
        exportMetaObjectRevisions: [0]
        isComposite: true
        defaultProperty: "delegate"
        Property { name: "title"; type: "string" }
        Property { name: "buttons"; type: "QObject"; isList: true; isReadonly: true }
        Property { name: "styleFileName"; type: "string" }
        Property { name: "delegate"; type: "QQmlComponent"; isPointer: true }
        Property { name: "sceneComponent"; type: "QQmlComponent"; isPointer: true }
        Property { name: "item"; type: "QQuickItem"; isReadonly: true; isPointer: true }
        Property { name: "opened"; type: "bool" }
        Property { name: "gestureWidth"; type: "double" }
        Property { name: "maximumWidth"; type: "double" }
        Property { name: "touchToClose"; type: "bool" }
        Property { name: "blockBack"; type: "bool" }
        Property { name: "openToPrimaryViewport"; type: "bool" }
        Method { name: "open"; type: "QVariant" }
        Method { name: "close"; type: "QVariant" }
    }
    Component {
        prototype: "AsemanQuickSceneItem"
        name: "AsemanQml.Controls.Beta/DialogScene 3.0"
        exports: ["AsemanQml.Controls.Beta/DialogScene 3.0"]
        exportMetaObjectRevisions: [0]
        isComposite: true
        defaultProperty: "items"
        Property { name: "title"; type: "string" }
        Property { name: "buttons"; type: "QVariant" }
        Property { name: "item"; type: "QQuickItem"; isPointer: true }
        Property { name: "scene"; type: "QQuickItem"; isReadonly: true; isPointer: true }
        Property { name: "items"; type: "QObject"; isList: true; isReadonly: true }
    }
    Component {
        prototype: "QQuickItem"
        name: "AsemanQml.Controls.Beta/FloatPage 3.0"
        exports: ["AsemanQml.Controls.Beta/FloatPage 3.0"]
        exportMetaObjectRevisions: [0]
        isComposite: true
        defaultProperty: "delegate"
        Property { name: "styleFileName"; type: "string" }
        Property { name: "delegate"; type: "QQmlComponent"; isPointer: true }
        Property { name: "sceneComponent"; type: "QQmlComponent"; isPointer: true }
        Property { name: "item"; type: "QQuickItem"; isReadonly: true; isPointer: true }
        Property { name: "opened"; type: "bool" }
        Property { name: "gestureWidth"; type: "double" }
        Property { name: "maximumWidth"; type: "double" }
        Property { name: "touchToClose"; type: "bool" }
        Property { name: "blockBack"; type: "bool" }
        Property { name: "openToPrimaryViewport"; type: "bool" }
        Method { name: "open"; type: "QVariant" }
        Method { name: "close"; type: "QVariant" }
    }
    Component {
        prototype: "AsemanQuickControlItem"
        name: "AsemanQml.Controls.Beta/Footer 3.0"
        exports: ["AsemanQml.Controls.Beta/Footer 3.0"]
        exportMetaObjectRevisions: [0]
        isComposite: true
        defaultProperty: "list"
        Property { name: "currentIndex"; type: "int" }
        Property { name: "interactive"; type: "bool" }
        Property { name: "list"; type: "QObject"; isList: true; isReadonly: true }
    }
    Component {
        prototype: "AsemanQuickControlItem"
        name: "AsemanQml.Controls.Beta/FooterButton 3.0"
        exports: ["AsemanQml.Controls.Beta/FooterButton 3.0"]
        exportMetaObjectRevisions: [0]
        isComposite: true
        defaultProperty: "data"
        Property { name: "text"; type: "string" }
        Property { name: "icon"; type: "string" }
        Property { name: "iconPixelSize"; type: "double" }
        Property { name: "radius"; type: "double" }
        Property { name: "pressedX"; type: "double"; isReadonly: true }
        Property { name: "pressedY"; type: "double"; isReadonly: true }
        Property { name: "pressed"; type: "bool"; isReadonly: true }
        Property { name: "hovered"; type: "bool"; isReadonly: true }
        Signal { name: "clicked" }
    }
    Component {
        prototype: "AsemanQuickControlItem"
        name: "AsemanQml.Controls.Beta/Header 3.0"
        exports: ["AsemanQml.Controls.Beta/Header 3.0"]
        exportMetaObjectRevisions: [0]
        isComposite: true
        defaultProperty: "items"
        Property { name: "title"; type: "string" }
        Property { name: "scene"; type: "QQuickItem"; isReadonly: true; isPointer: true }
        Property { name: "items"; type: "QObject"; isList: true; isReadonly: true }
    }
    Component {
        prototype: "QQuickItem"
        name: "AsemanQml.Controls.Beta/HeaderMenuButton 3.0"
        exports: ["AsemanQml.Controls.Beta/HeaderMenuButton 3.0"]
        exportMetaObjectRevisions: [0]
        isComposite: true
        defaultProperty: "data"
        Property { name: "buttonColor"; type: "QColor" }
        Property { name: "ratio"; type: "double" }
        Property { name: "pressed"; type: "bool"; isReadonly: true }
        Signal { name: "clicked" }
    }
    Component {
        prototype: "QQuickText"
        name: "AsemanQml.Controls.Beta/Icon 3.0"
        exports: ["AsemanQml.Controls.Beta/Icon 3.0"]
        exportMetaObjectRevisions: [0]
        isComposite: true
        defaultProperty: "data"
        Property { name: "styleFileName"; type: "string" }
    }
    Component {
        prototype: "AsemanQuickControlItem"
        name: "AsemanQml.Controls.Beta/ItemDelegate 3.0"
        exports: ["AsemanQml.Controls.Beta/ItemDelegate 3.0"]
        exportMetaObjectRevisions: [0]
        isComposite: true
        defaultProperty: "items"
        Property { name: "radius"; type: "double" }
        Property { name: "scene"; type: "QQuickItem"; isReadonly: true; isPointer: true }
        Property { name: "items"; type: "QObject"; isList: true; isReadonly: true }
        Property { name: "pressedX"; type: "double"; isReadonly: true }
        Property { name: "pressedY"; type: "double"; isReadonly: true }
        Property { name: "pressed"; type: "bool"; isReadonly: true }
        Property { name: "hovered"; type: "bool"; isReadonly: true }
        Signal { name: "clicked" }
    }
    Component {
        prototype: "QQuickText"
        name: "AsemanQml.Controls.Beta/Label 3.0"
        exports: ["AsemanQml.Controls.Beta/Label 3.0"]
        exportMetaObjectRevisions: [0]
        isComposite: true
        defaultProperty: "data"
        Property { name: "styleFileName"; type: "string" }
    }
    Component {
        prototype: "QQuickItem"
        name: "AsemanQml.Controls.Beta/Menu 3.0"
        exports: ["AsemanQml.Controls.Beta/Menu 3.0"]
        exportMetaObjectRevisions: [0]
        isComposite: true
        defaultProperty: "sceneData"
        Property { name: "sceneData"; type: "QObject"; isList: true; isReadonly: true }
        Property { name: "styleFileName"; type: "string" }
        Property { name: "delegate"; type: "QQmlComponent"; isPointer: true }
        Property { name: "sceneComponent"; type: "QQmlComponent"; isPointer: true }
        Property { name: "item"; type: "QQuickItem"; isReadonly: true; isPointer: true }
        Property { name: "opened"; type: "bool" }
        Property { name: "gestureWidth"; type: "double" }
        Property { name: "maximumWidth"; type: "double" }
        Property { name: "touchToClose"; type: "bool" }
        Property { name: "blockBack"; type: "bool" }
        Property { name: "openToPrimaryViewport"; type: "bool" }
        Method { name: "open"; type: "QVariant" }
        Method { name: "close"; type: "QVariant" }
    }
    Component {
        prototype: "AsemanQuickControlItem"
        name: "AsemanQml.Controls.Beta/MenuButton 3.0"
        exports: ["AsemanQml.Controls.Beta/MenuButton 3.0"]
        exportMetaObjectRevisions: [0]
        isComposite: true
        defaultProperty: "data"
        Property { name: "text"; type: "string" }
        Property { name: "icon"; type: "string" }
        Property { name: "iconPixelSize"; type: "double" }
        Property { name: "radius"; type: "double" }
        Property { name: "pressedX"; type: "double"; isReadonly: true }
        Property { name: "pressedY"; type: "double"; isReadonly: true }
        Property { name: "pressed"; type: "bool"; isReadonly: true }
        Property { name: "hovered"; type: "bool"; isReadonly: true }
        Signal { name: "clicked" }
    }
    Component {
        prototype: "QQuickItem"
        name: "AsemanQml.Controls.Beta/MenuIcon 3.0"
        exports: ["AsemanQml.Controls.Beta/MenuIcon 3.0"]
        exportMetaObjectRevisions: [0]
        isComposite: true
        defaultProperty: "data"
        Property { name: "color"; type: "QColor" }
        Property { name: "ratio"; type: "double" }
        Property { name: "_mirror"; type: "bool"; isReadonly: true }
    }
    Component {
        prototype: "QQuickItem"
        name: "AsemanQml.Controls.Beta/MenuPopup 3.0"
        exports: ["AsemanQml.Controls.Beta/MenuPopup 3.0"]
        exportMetaObjectRevisions: [0]
        isComposite: true
        defaultProperty: "delegate"
        Property { name: "styleFileName"; type: "string" }
        Property { name: "delegate"; type: "QQmlComponent"; isPointer: true }
        Property { name: "sceneComponent"; type: "QQmlComponent"; isPointer: true }
        Property { name: "item"; type: "QQuickItem"; isReadonly: true; isPointer: true }
        Property { name: "opened"; type: "bool" }
        Property { name: "gestureWidth"; type: "double" }
        Property { name: "maximumWidth"; type: "double" }
        Property { name: "touchToClose"; type: "bool" }
        Property { name: "blockBack"; type: "bool" }
        Property { name: "openToPrimaryViewport"; type: "bool" }
        Method { name: "open"; type: "QVariant" }
        Method { name: "close"; type: "QVariant" }
    }
    Component {
        prototype: "AsemanQuickSceneItem"
        name: "AsemanQml.Controls.Beta/Page 3.0"
        exports: ["AsemanQml.Controls.Beta/Page 3.0"]
        exportMetaObjectRevisions: [0]
        isComposite: true
        defaultProperty: "items"
        Property { name: "title"; type: "string" }
        Property { name: "header"; type: "QQuickItem"; isPointer: true }
        Property { name: "footer"; type: "QQuickItem"; isPointer: true }
        Property { name: "scene"; type: "QQuickItem"; isReadonly: true; isPointer: true }
        Property { name: "items"; type: "QObject"; isList: true; isReadonly: true }
    }
    Component {
        prototype: "AsemanQuickControlItem"
        name: "AsemanQml.Controls.Beta/ProgressBar 3.0"
        exports: ["AsemanQml.Controls.Beta/ProgressBar 3.0"]
        exportMetaObjectRevisions: [0]
        isComposite: true
        defaultProperty: "data"
        Property { name: "from"; type: "double" }
        Property { name: "to"; type: "double" }
        Property { name: "value"; type: "double" }
    }
    Component {
        prototype: "AsemanQuickRadioButtonControl"
        name: "AsemanQml.Controls.Beta/RadioButton 3.0"
        exports: ["AsemanQml.Controls.Beta/RadioButton 3.0"]
        exportMetaObjectRevisions: [0]
        isComposite: true
        defaultProperty: "data"
        Property { name: "text"; type: "string" }
        Property { name: "pressedX"; type: "double"; isReadonly: true }
        Property { name: "pressedY"; type: "double"; isReadonly: true }
        Property { name: "pressed"; type: "bool"; isReadonly: true }
        Property { name: "hovered"; type: "bool"; isReadonly: true }
        Signal { name: "clicked" }
        Signal { name: "toggled" }
        Method { name: "toggle"; type: "QVariant" }
    }
    Component {
        prototype: "QQuickRow"
        name: "AsemanQml.Controls.Beta/RowLayout 3.0"
        exports: ["AsemanQml.Controls.Beta/RowLayout 3.0"]
        exportMetaObjectRevisions: [0]
        isComposite: true
        defaultProperty: "data"
    }
    Component {
        prototype: "AsemanQuickControlItem"
        name: "AsemanQml.Controls.Beta/ScrollBar 3.0"
        exports: ["AsemanQml.Controls.Beta/ScrollBar 3.0"]
        exportMetaObjectRevisions: [0]
        isComposite: true
        defaultProperty: "data"
        Property { name: "flickArea"; type: "QQuickFlickable"; isPointer: true }
        Property { name: "orientation"; type: "int" }
        Property { name: "color"; type: "QColor" }
        Property { name: "forceVisible"; type: "bool" }
    }
    Component {
        prototype: "AsemanQuickScrollViewCore"
        name: "AsemanQml.Controls.Beta/ScrollView 3.0"
        exports: ["AsemanQml.Controls.Beta/ScrollView 3.0"]
        exportMetaObjectRevisions: [0]
        isComposite: true
        defaultProperty: "flickArea"
    }
    Component {
        prototype: "AsemanQuickControlItem"
        name: "AsemanQml.Controls.Beta/Slider 3.0"
        exports: ["AsemanQml.Controls.Beta/Slider 3.0"]
        exportMetaObjectRevisions: [0]
        isComposite: true
        defaultProperty: "data"
        Property { name: "from"; type: "double" }
        Property { name: "to"; type: "double" }
        Property { name: "value"; type: "double" }
        Property { name: "pressedX"; type: "double"; isReadonly: true }
        Property { name: "pressedY"; type: "double"; isReadonly: true }
        Property { name: "pressed"; type: "bool"; isReadonly: true }
        Property { name: "hovered"; type: "bool"; isReadonly: true }
        Method { name: "decrease"; type: "QVariant" }
        Method { name: "increase"; type: "QVariant" }
    }
    Component {
        prototype: "QQuickItem"
        name: "AsemanQml.Controls.Beta/StackPage 3.0"
        exports: ["AsemanQml.Controls.Beta/StackPage 3.0"]
        exportMetaObjectRevisions: [0]
        isComposite: true
        defaultProperty: "delegate"
        Property { name: "styleFileName"; type: "string" }
        Property { name: "delegate"; type: "QQmlComponent"; isPointer: true }
        Property { name: "sceneComponent"; type: "QQmlComponent"; isPointer: true }
        Property { name: "item"; type: "QQuickItem"; isReadonly: true; isPointer: true }
        Property { name: "opened"; type: "bool" }
        Property { name: "gestureWidth"; type: "double" }
        Property { name: "maximumWidth"; type: "double" }
        Property { name: "touchToClose"; type: "bool" }
        Property { name: "blockBack"; type: "bool" }
        Property { name: "openToPrimaryViewport"; type: "bool" }
        Method { name: "open"; type: "QVariant" }
        Method { name: "close"; type: "QVariant" }
    }
    Component {
        prototype: "AsemanQuickControlItem"
        name: "AsemanQml.Controls.Beta/SwipeView 3.0"
        exports: ["AsemanQml.Controls.Beta/SwipeView 3.0"]
        exportMetaObjectRevisions: [0]
        isComposite: true
        defaultProperty: "list"
        Property { name: "currentIndex"; type: "int" }
        Property { name: "interactive"; type: "bool" }
        Property { name: "list"; type: "QObject"; isList: true; isReadonly: true }
    }
    Component {
        prototype: "AsemanQuickControlItem"
        name: "AsemanQml.Controls.Beta/Switch 3.0"
        exports: ["AsemanQml.Controls.Beta/Switch 3.0"]
        exportMetaObjectRevisions: [0]
        isComposite: true
        defaultProperty: "data"
        Property { name: "text"; type: "string" }
        Property { name: "checked"; type: "bool" }
        Property { name: "pressedX"; type: "double"; isReadonly: true }
        Property { name: "pressedY"; type: "double"; isReadonly: true }
        Property { name: "pressed"; type: "bool"; isReadonly: true }
        Property { name: "hovered"; type: "bool"; isReadonly: true }
        Signal { name: "clicked" }
        Signal { name: "toggled" }
        Method { name: "toggle"; type: "QVariant" }
    }
    Component {
        prototype: "AsemanQuickControlItem"
        name: "AsemanQml.Controls.Beta/SwitchDelegate 3.0"
        exports: ["AsemanQml.Controls.Beta/SwitchDelegate 3.0"]
        exportMetaObjectRevisions: [0]
        isComposite: true
        defaultProperty: "data"
        Property { name: "text"; type: "string" }
        Property { name: "checked"; type: "bool" }
        Property { name: "pressedX"; type: "double"; isReadonly: true }
        Property { name: "pressedY"; type: "double"; isReadonly: true }
        Property { name: "pressed"; type: "bool"; isReadonly: true }
        Property { name: "hovered"; type: "bool"; isReadonly: true }
        Signal { name: "clicked" }
        Signal { name: "toggled" }
        Method { name: "toggle"; type: "QVariant" }
    }
    Component {
        prototype: "AsemanQuickControlItem"
        name: "AsemanQml.Controls.Beta/TabBar 3.0"
        exports: ["AsemanQml.Controls.Beta/TabBar 3.0"]
        exportMetaObjectRevisions: [0]
        isComposite: true
        defaultProperty: "list"
        Property { name: "currentIndex"; type: "int" }
        Property { name: "interactive"; type: "bool" }
        Property { name: "list"; type: "QObject"; isList: true; isReadonly: true }
    }
    Component {
        prototype: "AsemanQuickControlItem"
        name: "AsemanQml.Controls.Beta/TabButton 3.0"
        exports: ["AsemanQml.Controls.Beta/TabButton 3.0"]
        exportMetaObjectRevisions: [0]
        isComposite: true
        defaultProperty: "data"
        Property { name: "text"; type: "string" }
        Property { name: "icon"; type: "string" }
        Property { name: "iconPixelSize"; type: "double" }
        Property { name: "radius"; type: "double" }
        Property { name: "pressedX"; type: "double"; isReadonly: true }
        Property { name: "pressedY"; type: "double"; isReadonly: true }
        Property { name: "pressed"; type: "bool"; isReadonly: true }
        Property { name: "hovered"; type: "bool"; isReadonly: true }
        Signal { name: "clicked" }
    }
    Component {
        prototype: "QQuickTextEdit"
        name: "AsemanQml.Controls.Beta/TextArea 3.0"
        exports: ["AsemanQml.Controls.Beta/TextArea 3.0"]
        exportMetaObjectRevisions: [0]
        isComposite: true
        defaultProperty: "data"
        Property { name: "styleFileName"; type: "string" }
        Property { name: "placeholderText"; type: "string" }
        Signal {
            name: "contextMenuRequest"
            Parameter { name: "x"; type: "double" }
            Parameter { name: "y"; type: "double" }
        }
    }
    Component {
        prototype: "QQuickTextInput"
        name: "AsemanQml.Controls.Beta/TextField 3.0"
        exports: ["AsemanQml.Controls.Beta/TextField 3.0"]
        exportMetaObjectRevisions: [0]
        isComposite: true
        defaultProperty: "data"
        Property { name: "styleFileName"; type: "string" }
        Property { name: "placeholderText"; type: "string" }
        Signal {
            name: "contextMenuRequest"
            Parameter { name: "x"; type: "double" }
            Parameter { name: "y"; type: "double" }
        }
    }
    Component {
        prototype: "QQuickWindowQmlImpl"
        name: "AsemanQml.Controls.Beta/Window 3.0"
        exports: ["AsemanQml.Controls.Beta/Window 3.0"]
        exportMetaObjectRevisions: [0]
        isComposite: true
        defaultProperty: "items"
        Property { name: "backController"; type: "bool" }
        Property { name: "try_close"; type: "bool" }
        Property { name: "viewport"; type: "Viewport_QMLTYPE_61"; isReadonly: true; isPointer: true }
        Property { name: "items"; type: "QObject"; isList: true; isReadonly: true }
        Signal { name: "closeRequest" }
        Method { name: "tryClose"; type: "QVariant" }
    }
}
