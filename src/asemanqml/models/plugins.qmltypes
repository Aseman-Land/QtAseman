import QtQuick.tooling 1.2

// This file describes the plugin-supplied types contained in the library.
// It is used for QML tooling purposes only.
//
// This file was auto-generated by:
// 'qmlplugindump -nonrelocatable AsemanQml.Models 2.0'

Module {
    dependencies: [
        "AsemanQml.Base 2.0",
        "QtGraphicalEffects 1.12",
        "QtQml 2.1",
        "QtQml.Models 2.2",
        "QtQuick 2.9",
        "QtQuick.Controls 2.5",
        "QtQuick.Controls.Fusion 2.12",
        "QtQuick.Controls.Fusion.impl 2.12",
        "QtQuick.Controls.IOSStyle 2.12",
        "QtQuick.Controls.IOSStyle.impl 2.12",
        "QtQuick.Controls.Imagine 2.12",
        "QtQuick.Controls.Imagine.impl 2.12",
        "QtQuick.Controls.Material 2.12",
        "QtQuick.Controls.Material.impl 2.12",
        "QtQuick.Controls.Styles 1.4",
        "QtQuick.Controls.Styles.Plasma 2.0",
        "QtQuick.Controls.Universal 2.12",
        "QtQuick.Controls.Universal.impl 2.12",
        "QtQuick.Controls.impl 2.12",
        "QtQuick.Extras 1.4",
        "QtQuick.Layouts 1.4",
        "QtQuick.Templates 2.5",
        "QtQuick.Window 2.2",
        "org.kde.kconfig 1.0",
        "org.kde.kirigami 2.9",
        "org.kde.kquickcontrolsaddons 2.0",
        "org.kde.plasma.components 2.0",
        "org.kde.plasma.core 2.0",
        "org.kde.plasma.extras 2.0"
    ]
    Component {
        name: "AsemanAbstractListModel"
        prototype: "QAbstractListModel"
        Method {
            name: "get"
            type: "QVariant"
            Parameter { name: "index"; type: "int" }
            Parameter { name: "role"; type: "int" }
        }
        Method {
            name: "get"
            type: "QVariant"
            Parameter { name: "index"; type: "int" }
            Parameter { name: "roleName"; type: "string" }
        }
        Method {
            name: "get"
            type: "QVariantMap"
            Parameter { name: "index"; type: "int" }
        }
        Method { name: "roles"; type: "QStringList" }
    }
    Component {
        name: "AsemanAbstractQuickListModelHint"
        prototype: "QObject"
        exports: ["AsemanQml.Models/AsemanAbstractQuickListModelHint 2.0"]
        isCreatable: false
        exportMetaObjectRevisions: [0]
    }
    Component {
        name: "AsemanCalendarModel"
        prototype: "QObject"
        exports: ["AsemanQml.Models/CalendarModel 2.0"]
        exportMetaObjectRevisions: [0]
        Enum {
            name: "CalendarTypes"
            values: {
                "CalendarGregorian": 0,
                "CalendarJalali": 1,
                "CalendarHijri": 2
            }
        }
        Property { name: "years"; type: "QList<int>"; isReadonly: true }
        Property { name: "months"; type: "QList<int>"; isReadonly: true }
        Property { name: "days"; type: "QList<int>"; isReadonly: true }
        Property { name: "hours"; type: "QList<int>"; isReadonly: true }
        Property { name: "minutes"; type: "QList<int>"; isReadonly: true }
        Property { name: "currentYearIndex"; type: "int"; isReadonly: true }
        Property { name: "currentMonthIndex"; type: "int"; isReadonly: true }
        Property { name: "currentDaysIndex"; type: "int"; isReadonly: true }
        Property { name: "currentHoursIndex"; type: "int"; isReadonly: true }
        Property { name: "currentMinutesIndex"; type: "int"; isReadonly: true }
        Property { name: "dateTime"; type: "QDateTime" }
        Property { name: "calendar"; type: "int" }
        Property { name: "minimum"; type: "QDateTime" }
        Property { name: "maximum"; type: "QDateTime" }
        Signal { name: "secondsChanged" }
        Method {
            name: "setConvertDate"
            Parameter { name: "yearIdx"; type: "int" }
            Parameter { name: "monthIdx"; type: "int" }
            Parameter { name: "dayIdx"; type: "int" }
            Parameter { name: "hourIdx"; type: "int" }
            Parameter { name: "minuteIdx"; type: "int" }
        }
        Method {
            name: "monthName"
            type: "string"
            Parameter { name: "month"; type: "int" }
        }
    }
    Component {
        name: "AsemanCountriesModel"
        prototype: "AsemanAbstractListModel"
        exports: ["AsemanQml.Models/CountriesModel 2.0"]
        exportMetaObjectRevisions: [0]
        Enum {
            name: "ColorfullListModelRoles"
            values: {
                "NameRole": 256,
                "NativeNameRole": 257,
                "TldRole": 258,
                "Cca2Role": 259,
                "Ccn3Role": 260,
                "Cca3Role": 261,
                "CurrencyRole": 262,
                "CallingCodeRole": 263,
                "CapitalRole": 264,
                "AltSpellingsRole": 265,
                "RelevanceRole": 266,
                "RegionRole": 267,
                "SubregionRole": 268,
                "LanguageRole": 269,
                "LanguageCodesRole": 270,
                "TranslationsRole": 271,
                "LatlngRole": 272,
                "DemonymRole": 273,
                "BordersRole": 274,
                "AreaRole": 275,
                "KeyRole": 276
            }
        }
        Property { name: "count"; type: "int"; isReadonly: true }
        Property { name: "filter"; type: "string" }
        Property { name: "systemCountry"; type: "string"; isReadonly: true }
        Method {
            name: "indexOf"
            type: "int"
            Parameter { name: "name"; type: "string" }
        }
    }
    Component {
        name: "AsemanFileSystemModel"
        prototype: "AsemanAbstractListModel"
        exports: ["AsemanQml.Models/FileSystemModel 2.0"]
        exportMetaObjectRevisions: [0]
        Enum {
            name: "SortFlag"
            values: {
                "Name": 0,
                "Size": 1,
                "Date": 2
            }
        }
        Enum {
            name: "DataRole"
            values: {
                "FilePath": 256,
                "FileUrl": 257,
                "FileName": 258,
                "FileMime": 259,
                "FileSize": 260,
                "FileSuffix": 261,
                "FileBaseName": 262,
                "FileIsDir": 263,
                "FileModifiedDate": 264,
                "FileCreatedDate": 265
            }
        }
        Property { name: "showDirs"; type: "bool" }
        Property { name: "showDotAndDotDot"; type: "bool" }
        Property { name: "showDirsFirst"; type: "bool" }
        Property { name: "showFiles"; type: "bool" }
        Property { name: "showHidden"; type: "bool" }
        Property { name: "recursive"; type: "bool" }
        Property { name: "nameFilters"; type: "QStringList" }
        Property { name: "folder"; type: "string" }
        Property { name: "limit"; type: "int" }
        Property { name: "parentFolder"; type: "string"; isReadonly: true }
        Property { name: "sortField"; type: "int" }
        Property { name: "count"; type: "int"; isReadonly: true }
        Signal { name: "listChanged" }
        Method { name: "refresh" }
    }
    Component {
        name: "AsemanListModel"
        prototype: "AsemanAbstractListModel"
        Property { name: "count"; type: "int"; isReadonly: true }
        Property { name: "cachePath"; type: "string" }
        Property { name: "data"; type: "QVariantList" }
        Signal { name: "listChanged" }
        Signal { name: "dataListChanged" }
        Method {
            name: "insert"
            Parameter { name: "row"; type: "int" }
            Parameter { name: "map"; type: "QVariantMap" }
        }
        Method {
            name: "append"
            Parameter { name: "map"; type: "QVariantMap" }
        }
        Method {
            name: "remove"
            Parameter { name: "row"; type: "int" }
        }
        Method {
            name: "move"
            Parameter { name: "from"; type: "int" }
            Parameter { name: "to"; type: "int" }
        }
        Method { name: "clear" }
        Method {
            name: "change"
            Parameter { name: "list"; type: "QVariantList" }
        }
    }
    Component {
        name: "AsemanMixedListModel"
        prototype: "AsemanAbstractListModel"
        exports: ["AsemanQml.Models/MixedListModel 2.0"]
        exportMetaObjectRevisions: [0]
        Property { name: "count"; type: "int"; isReadonly: true }
        Property { name: "models"; type: "QVariantList" }
    }
    Component {
        name: "AsemanQuickListModel"
        defaultProperty: "items"
        prototype: "AsemanListModel"
        exports: ["AsemanQml.Models/AsemanListModel 2.0"]
        exportMetaObjectRevisions: [0]
        Property { name: "sortField"; type: "string" }
        Property { name: "sortDescending"; type: "bool" }
        Property { name: "items"; type: "QObject"; isList: true; isReadonly: true }
        Method { name: "reload" }
    }
    Component {
        name: "AsemanQuickListModelCamelCaseHint"
        prototype: "AsemanAbstractQuickListModelHint"
        exports: ["AsemanQml.Models/ModelCamelCaseHint 2.0"]
        exportMetaObjectRevisions: [0]
        Property { name: "path"; type: "string" }
        Signal { name: "changeRequest" }
    }
    Component {
        name: "AsemanQuickListModelCopyHint"
        prototype: "AsemanAbstractQuickListModelHint"
        exports: ["AsemanQml.Models/ModelCopyHint 2.0"]
        exportMetaObjectRevisions: [0]
        Property { name: "path"; type: "string" }
        Property { name: "targetPath"; type: "string" }
        Signal { name: "changeRequest" }
    }
    Component {
        name: "AsemanQuickListModelDeleteHint"
        prototype: "AsemanAbstractQuickListModelHint"
        exports: ["AsemanQml.Models/ModelDeleteHint 2.0"]
        exportMetaObjectRevisions: [0]
        Property { name: "path"; type: "string" }
        Signal { name: "changeRequest" }
    }
    Component {
        name: "AsemanQuickListModelFormatHint"
        prototype: "AsemanAbstractQuickListModelHint"
        exports: ["AsemanQml.Models/ModelFormatHint 2.0"]
        exportMetaObjectRevisions: [0]
        Property { name: "path"; type: "string" }
        Property { name: "method"; type: "QJSValue" }
        Signal { name: "changeRequest" }
    }
    Component {
        name: "AsemanQuickListModelSource"
        defaultProperty: "hints"
        prototype: "QObject"
        exports: ["AsemanQml.Models/AsemanListModelSource 2.0"]
        exportMetaObjectRevisions: [0]
        Property { name: "source"; type: "QVariant" }
        Property { name: "path"; type: "string" }
        Property { name: "data"; type: "QVariantList"; isReadonly: true }
        Property {
            name: "hints"
            type: "AsemanAbstractQuickListModelHint"
            isList: true
            isReadonly: true
        }
        Method { name: "refresh" }
    }
}
