import QtQuick.tooling 1.2

// This file describes the plugin-supplied types contained in the library.
// It is used for QML tooling purposes only.
//
// This file was auto-generated by:
// 'qmlplugindump -nonrelocatable AsemanQml.Controls 2.0'

Module {
    dependencies: [
        "QtGraphicalEffects 1.12",
        "QtQuick 2.13",
        "QtQuick.Controls 2.5",
        "QtQuick.Controls.Fusion 2.13",
        "QtQuick.Controls.Fusion.impl 2.12",
        "QtQuick.Controls.Imagine 2.13",
        "QtQuick.Controls.Imagine.impl 2.13",
        "QtQuick.Controls.Material 2.13",
        "QtQuick.Controls.Material.impl 2.12",
        "QtQuick.Controls.Universal 2.13",
        "QtQuick.Controls.Universal.impl 2.12",
        "QtQuick.Controls.impl 2.13",
        "QtQuick.Layouts 1.2",
        "QtQuick.Templates 2.13",
        "QtQuick.Window 2.2"
    ]
    Component {
        prototype: "QQuickRectangle"
        name: "AsemanQml.Controls/AsemanAbout 2.0"
        exports: ["AsemanQml.Controls/AsemanAbout 2.0"]
        exportMetaObjectRevisions: [0]
        isComposite: true
        defaultProperty: "data"
        Property { name: "darkBackground"; type: "bool"; isReadonly: true }
        Property { name: "textsColor"; type: "QColor" }
        Property { name: "highlightColor"; type: "QColor" }
        Property { name: "backButtonScale"; type: "double" }
        Property { name: "headerColor"; type: "QColor" }
    }
    Component {
        prototype: "QObject"
        name: "AsemanQml.Controls/AsemanApplication 2.0"
        exports: ["AsemanQml.Controls/AsemanApplication 2.0"]
        exportMetaObjectRevisions: [0]
        isComposite: true
        defaultProperty: "items"
        Property { name: "source"; type: "QUrl" }
        Property { name: "appMain"; type: "QQuickWindow"; isReadonly: true; isPointer: true }
        Property { name: "proxy"; type: "AsemanNetworkProxy"; isPointer: true }
        Property { name: "applicationId"; type: "string" }
        Property { name: "isRunning"; type: "bool"; isReadonly: true }
        Property { name: "items"; type: "QObject"; isList: true; isReadonly: true }
        Signal {
            name: "messageReceived"
            Parameter { name: "msg"; type: "string" }
        }
        Method {
            name: "sendMessage"
            Parameter { name: "msg"; type: "string" }
        }
        Method {
            name: "requestPermissions"
            type: "QVariantMap"
            Parameter { name: "persmissions"; type: "QStringList" }
            Parameter { name: "callback"; type: "QJSValue" }
        }
        Enum {
            name: "ApplicationType"
            values: {
                "NoneApplication": 0,
                "GuiApplication": 1,
                "CoreApplication": 2
            }
        }
        Enum {
            name: "ApplicationState"
            values: {
                "ApplicationSuspended": 0,
                "ApplicationHidden": 1,
                "ApplicationInactive": 2,
                "ApplicationActive": 4
            }
        }
        Property { name: "homePath"; type: "string"; isReadonly: true }
        Property { name: "startPath"; type: "string"; isReadonly: true }
        Property { name: "appPath"; type: "string"; isReadonly: true }
        Property { name: "appFilePath"; type: "string"; isReadonly: true }
        Property { name: "logPath"; type: "string" }
        Property { name: "confsPath"; type: "string"; isReadonly: true }
        Property { name: "tempPath"; type: "string"; isReadonly: true }
        Property { name: "backupsPath"; type: "string"; isReadonly: true }
        Property { name: "cameraPath"; type: "string"; isReadonly: true }
        Property { name: "appType"; type: "int"; isReadonly: true }
        Property { name: "isDebug"; type: "bool"; isReadonly: true }
        Property { name: "globalFont"; type: "QFont" }
        Property { name: "applicationName"; type: "string" }
        Property { name: "applicationVersion"; type: "string" }
        Property { name: "organizationName"; type: "string" }
        Property { name: "organizationDomain"; type: "string" }
        Property { name: "applicationAbout"; type: "string" }
        Property { name: "qpaNoTextHandles"; type: "bool" }
        Property { name: "windowIcon"; type: "QUrl" }
        Property { name: "applicationState"; type: "int"; isReadonly: true }
        Property { name: "applicationDisplayName"; type: "string" }
        Property { name: "platformName"; type: "string"; isReadonly: true }
        Property { name: "quitOnLastWindowClosed"; type: "bool" }
        Signal { name: "fakeSignal" }
        Signal { name: "globalFontFamilyChanged" }
        Signal { name: "globalMonoFontFamilyChanged" }
        Signal { name: "languageUpdated" }
        Signal { name: "backRequest" }
        Signal { name: "clickedOnDock" }
        Signal { name: "lastWindowClosed" }
        Method { name: "refreshTranslations" }
        Method { name: "back" }
        Method { name: "exec"; type: "int" }
        Method {
            name: "exit"
            Parameter { name: "retcode"; type: "int" }
        }
        Method { name: "exit" }
        Method {
            name: "sleep"
            Parameter { name: "ms"; type: "qulonglong" }
        }
        Method {
            name: "setSetting"
            Parameter { name: "key"; type: "string" }
            Parameter { name: "value"; type: "QVariant" }
        }
        Method {
            name: "readSetting"
            type: "QVariant"
            Parameter { name: "key"; type: "string" }
            Parameter { name: "defaultValue"; type: "QVariant" }
        }
        Method {
            name: "readSetting"
            type: "QVariant"
            Parameter { name: "key"; type: "string" }
        }
    }
    Component {
        prototype: "QQuickApplicationWindow"
        name: "AsemanQml.Controls/AsemanFullWindow 2.0"
        exports: ["AsemanQml.Controls/AsemanFullWindow 2.0"]
        exportMetaObjectRevisions: [0]
        isComposite: true
        defaultProperty: "contentData"
        Property { name: "backgroundColor"; type: "QColor" }
        Property {
            name: "pageManager"
            type: "SlidePageManager_QMLTYPE_21"
            isReadonly: true
            isPointer: true
        }
        Property { name: "sidebar"; type: "SideMenu_QMLTYPE_17"; isReadonly: true; isPointer: true }
        Property {
            name: "headerButton"
            type: "HeaderMenuButton_QMLTYPE_28"
            isReadonly: true
            isPointer: true
        }
        Property { name: "backVisible"; type: "bool" }
        Property { name: "main"; type: "QQmlComponent"; isPointer: true }
        Property { name: "drawer"; type: "QQmlComponent"; isPointer: true }
        Property { name: "forceActiveBackButton"; type: "bool" }
        Property { name: "backController"; type: "bool" }
        Property { name: "try_close"; type: "bool" }
        Property { name: "portrait"; type: "bool"; isReadonly: true }
        Property { name: "masterPalette"; type: "QQuickSystemPalette"; isReadonly: true; isPointer: true }
        Property { name: "tooltip"; type: "Tooltip_QMLTYPE_30"; isReadonly: true; isPointer: true }
        Signal { name: "closeRequest" }
        Method { name: "tryClose"; type: "QVariant" }
        Method {
            name: "showTooltip"
            type: "QVariant"
            Parameter { name: "text"; type: "QVariant" }
        }
        Method {
            name: "showGlobalWait"
            type: "QVariant"
            Parameter { name: "text"; type: "QVariant" }
            Parameter { name: "blockBack"; type: "QVariant" }
        }
    }
    Component {
        prototype: "QQuickPage"
        name: "AsemanQml.Controls/AsemanPage 2.0"
        exports: ["AsemanQml.Controls/AsemanPage 2.0"]
        exportMetaObjectRevisions: [0]
        isComposite: true
        defaultProperty: "sceneData"
        Property { name: "landscape"; type: "bool"; isReadonly: true }
        Property { name: "footerItem"; type: "QQuickRectangle"; isReadonly: true; isPointer: true }
        Property { name: "sceneData"; type: "QObject"; isList: true; isReadonly: true }
    }
    Component {
        prototype: "QQuickApplicationWindow"
        name: "AsemanQml.Controls/AsemanWindow 2.0"
        exports: ["AsemanQml.Controls/AsemanWindow 2.0"]
        exportMetaObjectRevisions: [0]
        isComposite: true
        defaultProperty: "contentData"
        Property { name: "backController"; type: "bool" }
        Property { name: "try_close"; type: "bool" }
        Property { name: "portrait"; type: "bool"; isReadonly: true }
        Property { name: "masterPalette"; type: "QQuickSystemPalette"; isReadonly: true; isPointer: true }
        Property { name: "tooltip"; type: "Tooltip_QMLTYPE_30"; isReadonly: true; isPointer: true }
        Signal { name: "closeRequest" }
        Method { name: "tryClose"; type: "QVariant" }
        Method {
            name: "showTooltip"
            type: "QVariant"
            Parameter { name: "text"; type: "QVariant" }
        }
        Method {
            name: "showGlobalWait"
            type: "QVariant"
            Parameter { name: "text"; type: "QVariant" }
            Parameter { name: "blockBack"; type: "QVariant" }
        }
    }
    Component {
        prototype: "QQuickItem"
        name: "AsemanQml.Controls/CircularProgressBar 2.0"
        exports: ["AsemanQml.Controls/CircularProgressBar 2.0"]
        exportMetaObjectRevisions: [0]
        isComposite: true
        defaultProperty: "data"
        Property { name: "lineWidth"; type: "double" }
        Property { name: "progress"; type: "double" }
        Property { name: "color"; type: "QColor" }
        Property { name: "running"; type: "bool" }
        Property { name: "progressText"; type: "bool" }
    }
    Component {
        prototype: "QQuickItem"
        name: "AsemanQml.Controls/DateTimeChooser 2.0"
        exports: ["AsemanQml.Controls/DateTimeChooser 2.0"]
        exportMetaObjectRevisions: [0]
        isComposite: true
        defaultProperty: "data"
        Property { name: "color"; type: "QColor" }
        Property { name: "textsColor"; type: "QColor" }
        Property { name: "dateVisible"; type: "bool" }
        Property { name: "timeVisible"; type: "bool" }
        Property { name: "calendarType"; type: "int" }
        Property { name: "date"; type: "QDateTime" }
        Method { name: "getDate"; type: "QVariant" }
    }
    Component {
        prototype: "QQuickItem"
        name: "AsemanQml.Controls/Drawer 2.0"
        exports: ["AsemanQml.Controls/Drawer 2.0"]
        exportMetaObjectRevisions: [0]
        isComposite: true
        defaultProperty: "data"
        Property { name: "delegate"; type: "QQmlComponent"; isPointer: true }
        Property { name: "item"; type: "QVariant" }
        Property { name: "handleWidth"; type: "double" }
        Property { name: "percent"; type: "double"; isReadonly: true }
        Property { name: "layoutDirection"; type: "int" }
        Property { name: "showed"; type: "bool"; isReadonly: true }
        Property { name: "menuWidth"; type: "double" }
        Property { name: "pressed"; type: "bool"; isReadonly: true }
        Method { name: "discard"; type: "QVariant" }
        Method { name: "show"; type: "QVariant" }
    }
    Component {
        prototype: "QQuickItem"
        name: "AsemanQml.Controls/ExtendedFab 2.0"
        exports: ["AsemanQml.Controls/ExtendedFab 2.0"]
        exportMetaObjectRevisions: [0]
        isComposite: true
        defaultProperty: "data"
        Property { name: "color"; type: "QColor" }
        Property { name: "fontSize"; type: "int" }
        Property { name: "scrollArea"; type: "QQuickFlickable"; isPointer: true }
        Property { name: "icon"; type: "string" }
        Property { name: "textColor"; type: "QColor" }
        Property { name: "text"; type: "string" }
        Property { name: "fontFamily"; type: "string" }
    }
    Component {
        prototype: "QQuickRectangle"
        name: "AsemanQml.Controls/Header 2.0"
        exports: ["AsemanQml.Controls/Header 2.0"]
        exportMetaObjectRevisions: [0]
        isComposite: true
        defaultProperty: "data"
        Property { name: "light"; type: "bool" }
        Property { name: "backButton"; type: "bool" }
        Property { name: "backScale"; type: "double" }
        Property { name: "statusBar"; type: "bool" }
        Property { name: "centerText"; type: "bool" }
        Property { name: "layoutDirection"; type: "int" }
        Property { name: "defaultHeight"; type: "double"; isReadonly: true }
        Property { name: "text"; type: "string" }
        Property { name: "titleFont"; type: "QFont" }
        Property { name: "titleFontSize"; type: "int" }
        Property { name: "backButtonText"; type: "string" }
        Property { name: "shadow"; type: "bool" }
        Property { name: "shadowOpacity"; type: "double" }
        Signal { name: "beginBack" }
        Method { name: "initTranslations"; type: "QVariant" }
    }
    Component {
        prototype: "QQuickItem"
        name: "AsemanQml.Controls/HeaderMenuButton 2.0"
        exports: ["AsemanQml.Controls/HeaderMenuButton 2.0"]
        exportMetaObjectRevisions: [0]
        isComposite: true
        defaultProperty: "data"
        Property { name: "color"; type: "QColor" }
        Property { name: "buttonColor"; type: "QColor" }
        Property { name: "ratio"; type: "double" }
        Property { name: "pressed"; type: "bool"; isReadonly: true }
        Signal { name: "clicked" }
    }
    Component {
        prototype: "QQuickItem"
        name: "AsemanQml.Controls/Helper 2.0"
        exports: ["AsemanQml.Controls/Helper 2.0"]
        exportMetaObjectRevisions: [0]
        isComposite: true
        defaultProperty: "data"
        Property { name: "borderPadding"; type: "double" }
        Property { name: "currentIndex"; type: "int" }
        Property {
            name: "currentItem"
            type: "HelperPoint_QMLTYPE_63"
            isReadonly: true
            isPointer: true
        }
        Property { name: "count"; type: "int"; isReadonly: true }
        Property { name: "ratio"; type: "double"; isReadonly: true }
        Property { name: "duration"; type: "int" }
        Signal { name: "finished" }
        Method { name: "next"; type: "QVariant" }
    }
    Component {
        prototype: "QQuickItem"
        name: "AsemanQml.Controls/HelperPoint 2.0"
        exports: ["AsemanQml.Controls/HelperPoint 2.0"]
        exportMetaObjectRevisions: [0]
        isComposite: true
        defaultProperty: "data"
        Property { name: "title"; type: "string" }
        Property { name: "description"; type: "string" }
        Property { name: "icon"; type: "string" }
        Property { name: "color"; type: "QColor" }
        Property { name: "titleColor"; type: "QColor" }
        Property { name: "descriptionColor"; type: "QColor" }
        Property { name: "iconColor"; type: "QColor" }
        Property { name: "titleFont"; type: "QFont" }
        Property { name: "descriptionFont"; type: "QFont" }
        Property { name: "iconFont"; type: "QFont" }
        Property { name: "buttonText"; type: "string" }
        Property { name: "classId"; type: "string"; isReadonly: true }
    }
    Component {
        prototype: "QQuickItem"
        name: "AsemanQml.Controls/MaterialDesignButton 2.0"
        exports: ["AsemanQml.Controls/MaterialDesignButton 2.0"]
        exportMetaObjectRevisions: [0]
        isComposite: true
        defaultProperty: "data"
        Property { name: "hideState"; type: "bool" }
        Property { name: "opened"; type: "bool" }
        Property { name: "layoutDirection"; type: "int" }
        Property { name: "hasMenu"; type: "bool" }
        Property { name: "list"; type: "QVariant" }
        Property { name: "rotateCount"; type: "int" }
        Property { name: "disable"; type: "bool" }
        Property { name: "flickable"; type: "QQuickFlickable"; isPointer: true }
        Property { name: "icon"; type: "QUrl" }
        Property { name: "textItem"; type: "QQuickText"; isReadonly: true; isPointer: true }
        Property { name: "color"; type: "QColor" }
        Property { name: "background"; type: "QColor" }
        Signal { name: "clicked" }
        Method { name: "hide"; type: "QVariant" }
        Method { name: "show"; type: "QVariant" }
        Method { name: "close"; type: "QVariant" }
    }
    Component {
        prototype: "QQuickItem"
        name: "AsemanQml.Controls/MenuController 2.0"
        exports: ["AsemanQml.Controls/MenuController 2.0"]
        exportMetaObjectRevisions: [0]
        isComposite: true
        defaultProperty: "data"
        Property { name: "ratio"; type: "double" }
        Property { name: "source"; type: "QVariant" }
        Property { name: "layoutDirection"; type: "int" }
        Property { name: "handleWidth"; type: "double" }
        Property { name: "component"; type: "QQmlComponent"; isPointer: true }
        Property { name: "menuWidth"; type: "double" }
        Property { name: "isVisible"; type: "bool" }
        Property { name: "menuTopMargin"; type: "double" }
        Property { name: "pressed"; type: "bool"; isReadonly: true }
        Property { name: "animating"; type: "bool" }
        Method { name: "refreshSource"; type: "QVariant" }
        Method { name: "refresh"; type: "QVariant" }
        Method { name: "close"; type: "QVariant" }
        Method { name: "show"; type: "QVariant" }
    }
    Component {
        prototype: "QQuickItem"
        name: "AsemanQml.Controls/MenuIcon 2.0"
        exports: ["AsemanQml.Controls/MenuIcon 2.0"]
        exportMetaObjectRevisions: [0]
        isComposite: true
        defaultProperty: "data"
        Property { name: "color"; type: "QColor" }
        Property { name: "ratio"; type: "double" }
        Property { name: "layoutDirection"; type: "int" }
    }
    Component {
        prototype: "QQuickItem"
        name: "AsemanQml.Controls/PanelFlicker 2.0"
        exports: ["AsemanQml.Controls/PanelFlicker 2.0"]
        exportMetaObjectRevisions: [0]
        isComposite: true
        defaultProperty: "data"
        Property { name: "delegate"; type: "QQmlComponent"; isPointer: true }
        Property { name: "item"; type: "QVariant" }
        Property { name: "handleHeight"; type: "double" }
        Property { name: "percent"; type: "double"; isReadonly: true }
        Property { name: "layoutDirection"; type: "int" }
        Property { name: "showed"; type: "bool"; isReadonly: true }
        Property { name: "menuHeight"; type: "double" }
        Property { name: "pressed"; type: "bool"; isReadonly: true }
        Method { name: "discard"; type: "QVariant" }
        Method { name: "show"; type: "QVariant" }
    }
    Component {
        prototype: "QQuickItem"
        name: "AsemanQml.Controls/ScrollBar 2.0"
        exports: ["AsemanQml.Controls/ScrollBar 2.0"]
        exportMetaObjectRevisions: [0]
        isComposite: true
        defaultProperty: "data"
        Property { name: "scrollArea"; type: "QVariant" }
        Property { name: "orientation"; type: "QVariant" }
        Property { name: "forceVisible"; type: "bool" }
        Property { name: "color"; type: "QColor" }
        Method { name: "position"; type: "QVariant" }
        Method { name: "size"; type: "QVariant" }
    }
    Component {
        prototype: "QQuickItem"
        name: "AsemanQml.Controls/SideMenu 2.0"
        exports: ["AsemanQml.Controls/SideMenu 2.0"]
        exportMetaObjectRevisions: [0]
        isComposite: true
        defaultProperty: "data"
        Property { name: "menuTypeModern"; type: "int"; isReadonly: true }
        Property { name: "menuTypeMaterial"; type: "int"; isReadonly: true }
        Property { name: "menuType"; type: "int" }
        Property { name: "delegate"; type: "QQmlComponent"; isPointer: true }
        Property { name: "source"; type: "QQuickItem"; isPointer: true }
        Property { name: "menuItem"; type: "QQuickItem"; isReadonly: true; isPointer: true }
        Property { name: "handleWidth"; type: "double" }
        Property { name: "menuWidth"; type: "double" }
        Property { name: "showed"; type: "bool"; isReadonly: true }
        Property { name: "pressed"; type: "bool"; isReadonly: true }
        Property { name: "percent"; type: "double"; isReadonly: true }
        Property { name: "layoutDirection"; type: "int" }
        Method { name: "discard"; type: "QVariant" }
        Method { name: "show"; type: "QVariant" }
    }
    Component {
        prototype: "QQuickItem"
        name: "AsemanQml.Controls/SlidePageManager 2.0"
        exports: ["AsemanQml.Controls/SlidePageManager 2.0"]
        exportMetaObjectRevisions: [0]
        isComposite: true
        defaultProperty: "data"
        Property { name: "mainComponent"; type: "QQmlComponent"; isPointer: true }
        Property { name: "currentItem"; type: "QVariant"; isReadonly: true }
        Property { name: "animationDuration"; type: "int" }
        Property { name: "easingType"; type: "int" }
        Property { name: "gestureBackable"; type: "bool" }
        Property { name: "layoutDirection"; type: "int" }
        Property { name: "direction"; type: "int" }
        Property { name: "mainItem"; type: "QVariant" }
        Property { name: "count"; type: "int"; isReadonly: true }
        Method {
            name: "append"
            type: "QVariant"
            Parameter { name: "component"; type: "QVariant" }
            Parameter { name: "properties"; type: "QVariant" }
        }
        Method { name: "closeLast"; type: "QVariant" }
    }
    Component {
        prototype: "QQuickSlider"
        name: "AsemanQml.Controls/Slider 2.0"
        exports: ["AsemanQml.Controls/Slider 2.0"]
        exportMetaObjectRevisions: [0]
        isComposite: true
        defaultProperty: "data"
        Property { name: "labelDecimals"; type: "int" }
        Property { name: "labelUnit"; type: "string" }
        Property { name: "labelVisible"; type: "bool" }
        Property { name: "labelOpacity"; type: "double" }
    }
    Component {
        prototype: "QQuickItem"
        name: "AsemanQml.Controls/TabBar 2.0"
        exports: ["AsemanQml.Controls/TabBar 2.0"]
        exportMetaObjectRevisions: [0]
        isComposite: true
        defaultProperty: "data"
        Property { name: "minimumWidth"; type: "double" }
        Property { name: "highlightColor"; type: "QColor" }
        Property { name: "textColor"; type: "QColor" }
        Property { name: "fontSize"; type: "double" }
        Property { name: "fontFamily"; type: "string" }
        Property { name: "displayRole"; type: "string" }
        Property { name: "color"; type: "QColor" }
        Property { name: "model"; type: "QVariant" }
        Property { name: "currentIndex"; type: "int" }
        Property { name: "layoutDirection"; type: "int" }
        Signal {
            name: "clicked"
            Parameter { name: "index"; type: "int" }
        }
    }
    Component {
        prototype: "QQuickItem"
        name: "AsemanQml.Controls/TabView 2.0"
        exports: ["AsemanQml.Controls/TabView 2.0"]
        exportMetaObjectRevisions: [0]
        isComposite: true
        defaultProperty: "data"
        Property { name: "minimumTabSize"; type: "double" }
        Property { name: "maximumTabSize"; type: "double" }
        Property { name: "tabsHeight"; type: "double" }
        Property { name: "model"; type: "QVariant" }
        Property { name: "currentIndex"; type: "int" }
    }
    Component {
        prototype: "QQuickTextArea"
        name: "AsemanQml.Controls/TextArea 2.0"
        exports: ["AsemanQml.Controls/TextArea 2.0"]
        exportMetaObjectRevisions: [0]
        isComposite: true
        defaultProperty: "data"
        Property { name: "placeholder"; type: "string" }
        Property { name: "cursorParent"; type: "QQuickItem"; isPointer: true }
        Property { name: "cursor"; type: "TextCursorArea_QMLTYPE_96"; isReadonly: true; isPointer: true }
    }
    Component {
        prototype: "QQuickItem"
        name: "AsemanQml.Controls/TextCursorArea 2.0"
        exports: ["AsemanQml.Controls/TextCursorArea 2.0"]
        exportMetaObjectRevisions: [0]
        isComposite: true
        defaultProperty: "data"
        Property { name: "color"; type: "QColor" }
        Property { name: "backgroundColor"; type: "QColor" }
        Property { name: "textItem"; type: "QQuickItem"; isPointer: true }
        Property { name: "cursorParent"; type: "QQuickItem"; isPointer: true }
        Property { name: "selected"; type: "bool"; isReadonly: true }
        Property { name: "topPadding"; type: "double" }
        Property { name: "menuMap"; type: "QVariant" }
        Property { name: "menuMoreMap"; type: "QVariant" }
        Property { name: "menuMore"; type: "bool" }
        Property { name: "active"; type: "bool" }
        Method { name: "hideMenu"; type: "QVariant" }
        Method { name: "close"; type: "QVariant" }
    }
    Component {
        prototype: "QQuickTextField"
        name: "AsemanQml.Controls/TextField 2.0"
        exports: ["AsemanQml.Controls/TextField 2.0"]
        exportMetaObjectRevisions: [0]
        isComposite: true
        defaultProperty: "data"
        Property { name: "placeholder"; type: "string" }
        Property { name: "cursorParent"; type: "QQuickItem"; isPointer: true }
        Property { name: "cursor"; type: "TextCursorArea_QMLTYPE_96"; isReadonly: true; isPointer: true }
    }
    Component {
        prototype: "QQuickItem"
        name: "AsemanQml.Controls/Tooltip 2.0"
        exports: ["AsemanQml.Controls/Tooltip 2.0"]
        exportMetaObjectRevisions: [0]
        isComposite: true
        defaultProperty: "data"
        Property { name: "interval"; type: "int" }
        Property { name: "padding"; type: "double" }
        Property { name: "textFont"; type: "QFont" }
        Property { name: "textColor"; type: "QColor" }
        Property { name: "color"; type: "QColor" }
        Method {
            name: "showText"
            type: "QVariant"
            Parameter { name: "text"; type: "QVariant" }
        }
    }
}
