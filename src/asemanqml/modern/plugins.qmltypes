import QtQuick.tooling 1.2

// This file describes the plugin-supplied types contained in the library.
// It is used for QML tooling purposes only.
//
// This file was auto-generated by:
// 'qmlplugindump -nonrelocatable AsemanQml.Modern 2.0'

Module {
    dependencies: ["QtQuick 2.8"]
    Component {
        prototype: "QQuickItem"
        name: "AsemanQml.Modern/FancyNavigationBar 2.0"
        exports: ["AsemanQml.Modern/FancyNavigationBar 2.0"]
        exportMetaObjectRevisions: [0]
        isComposite: true
        defaultProperty: "contents"
        Property { name: "currentIndex"; type: "int" }
        Property { name: "count"; type: "int"; isReadonly: true }
        Property { name: "currentPage"; type: "FancyPage_QMLTYPE_0"; isReadonly: true; isPointer: true }
        Property { name: "color"; type: "QColor" }
        Property { name: "contents"; type: "QObject"; isList: true; isReadonly: true }
        Property { name: "barHeight"; type: "double" }
    }
    Component {
        prototype: "QQuickItem"
        name: "AsemanQml.Modern/FancyPage 2.0"
        exports: ["AsemanQml.Modern/FancyPage 2.0"]
        exportMetaObjectRevisions: [0]
        isComposite: true
        defaultProperty: "contents"
        Property { name: "delegateItem"; type: "QQuickItem"; isPointer: true }
        Property { name: "delegate"; type: "QQmlComponent"; isPointer: true }
        Property { name: "title"; type: "string" }
        Property { name: "font"; type: "QFont" }
        Property { name: "textColor"; type: "QColor" }
        Property { name: "contents"; type: "QObject"; isList: true; isReadonly: true }
        Property { name: "color"; type: "QColor" }
        Method {
            name: "init"
            type: "QVariant"
            Parameter { name: "opened"; type: "QVariant" }
        }
        Method { name: "openFromLeft"; type: "QVariant" }
        Method { name: "openFromRight"; type: "QVariant" }
        Method { name: "closeToLeft"; type: "QVariant" }
        Method { name: "closeToRight"; type: "QVariant" }
    }
    Component {
        prototype: "QQuickItem"
        name: "AsemanQml.Modern/FancySearchBar 2.0"
        exports: ["AsemanQml.Modern/FancySearchBar 2.0"]
        exportMetaObjectRevisions: [0]
        isComposite: true
        defaultProperty: "data"
        Property { name: "layoutDirection"; type: "int" }
        Property { name: "mainList"; type: "QQuickItem"; isPointer: true }
        Property { name: "ratio"; type: "double"; isReadonly: true }
        Property { name: "keyword"; type: "string" }
        Property { name: "toolbarHeight"; type: "double" }
        Property { name: "toolbarTopMargin"; type: "double" }
        Property { name: "searchBarButton"; type: "QQuickText"; isReadonly: true; isPointer: true }
        Property { name: "clearButton"; type: "QQuickText"; isReadonly: true; isPointer: true }
        Property { name: "panelColor"; type: "QColor" }
        Property { name: "searchBarColor"; type: "QColor" }
        Property { name: "opened"; type: "bool" }
        Property { name: "textInput"; type: "QQuickTextInput"; isReadonly: true; isPointer: true }
        Property { name: "placeholder"; type: "string" }
    }
    Component {
        prototype: "QQuickItem"
        name: "AsemanQml.Modern/FastDropShadow 2.0"
        exports: ["AsemanQml.Modern/FastDropShadow 2.0"]
        exportMetaObjectRevisions: [0]
        isComposite: true
        defaultProperty: "data"
        Property { name: "horizontalOffset"; type: "double" }
        Property { name: "verticalOffset"; type: "double" }
        Property { name: "cached"; type: "bool" }
        Property { name: "radius"; type: "double" }
        Property { name: "color"; type: "QColor" }
        Property { name: "source"; type: "QVariant" }
    }
    Component {
        prototype: "QQuickItem"
        name: "AsemanQml.Modern/FastRectengleShadow 2.0"
        exports: ["AsemanQml.Modern/FastRectengleShadow 2.0"]
        exportMetaObjectRevisions: [0]
        isComposite: true
        defaultProperty: "data"
        Property { name: "horizontalOffset"; type: "double" }
        Property { name: "verticalOffset"; type: "double" }
        Property { name: "cached"; type: "bool" }
        Property { name: "radius"; type: "double" }
        Property { name: "color"; type: "QColor" }
        Property { name: "roundRadius"; type: "double" }
    }
}
